name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    branches: [main]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:14-3.3-alpine
        env:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          # will assign a random free host port
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      # https://github.com/docker/metadata-action
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: maplibre/martin
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      - name: Build the Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: false
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      - run: docker images
      - run: echo "${{ steps.docker_build.outputs.imageid }}"
      - run: echo "${{ steps.docker_build.outputs.digest }}"
      - run: echo "${{ steps.docker_build.outputs.metadata }}"
      - name: Start postgres
        uses: nyurik/action-setup-postgis@v1
        id: pg
        with:
          username: test
          password: test
          database: test
          rights: --superuser
      - name: Init database
        shell: bash
        run: tests/fixtures/initdb.sh
        env:
          DATABASE_URL: ${{ steps.pg.outputs.connection-uri }}
      - name: Test Docker image
        run: tests/test.sh
        env:
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          DATABASE_URL: ${{ steps.pg.outputs.connection-uri }}
          MARTIN_BUILD: "-"
          MARTIN_BIN: docker run --rm --net=host -p 3000:3000 -e DATABASE_URL ${{ steps.docker_meta.outputs.tags }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        if: ${{ github.actor != 'dependabot[bot]' && !github.event.pull_request.head.repo.fork }}
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Push the Docker image
        if: ${{ github.actor != 'dependabot[bot]' && github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
