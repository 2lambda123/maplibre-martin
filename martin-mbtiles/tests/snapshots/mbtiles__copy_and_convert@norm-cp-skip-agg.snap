---
source: martin-mbtiles/tests/mbtiles.rs
expression: result
---
[[]]
type = 'table'
tbl_name = 'images'
sql = '''
CREATE TABLE images (
             tile_data blob,
             tile_id text NOT NULL PRIMARY KEY)'''
values = [
    '(  "edit-v1", "EFE0AE5FD114DE99855BC2838BE97E1D"  )',
    '(  "remove", "0F6969D7052DA9261E31DDB6E88C136E"  )',
    '(  "same", "51037A4A37730F52C8732586D3AAA316"  )',
]

[[]]
type = 'table'
tbl_name = 'map'
sql = '''
CREATE TABLE map (
             zoom_level integer NOT NULL,
             tile_column integer NOT NULL,
             tile_row integer NOT NULL,
             tile_id text,
             PRIMARY KEY(zoom_level, tile_column, tile_row))'''
values = [
    '(  1, 0, 0, "51037A4A37730F52C8732586D3AAA316"  )',
    '(  1, 0, 1, "EFE0AE5FD114DE99855BC2838BE97E1D"  )',
    '(  1, 1, 1, "0F6969D7052DA9261E31DDB6E88C136E"  )',
]

[[]]
type = 'table'
tbl_name = 'metadata'
sql = '''
CREATE TABLE metadata (
             name text NOT NULL PRIMARY KEY,
             value text)'''
values = [
    '(  "edit", "value - v1"  )',
    '(  "remove", "value - remove"  )',
    '(  "same", "value - same"  )',
]

[[]]
type = 'index'
tbl_name = 'images'

[[]]
type = 'index'
tbl_name = 'map'

[[]]
type = 'index'
tbl_name = 'metadata'

[[]]
type = 'view'
tbl_name = 'tiles'
sql = '''
CREATE VIEW tiles AS
             SELECT map.zoom_level AS zoom_level,
                    map.tile_column AS tile_column,
                    map.tile_row AS tile_row,
                    images.tile_data AS tile_data
             FROM map
             JOIN images ON images.tile_id = map.tile_id'''

[[]]
type = 'view'
tbl_name = 'tiles_with_hash'
sql = '''
CREATE VIEW tiles_with_hash AS
             SELECT
                 map.zoom_level AS zoom_level,
                 map.tile_column AS tile_column,
                 map.tile_row AS tile_row,
                 images.tile_data AS tile_data,
                 images.tile_id AS tile_hash
             FROM map
             JOIN images ON images.tile_id = map.tile_id'''
